
import time
from telebot import TeleBot, types
from re import findall, match
from requests import get, request
from bs4 import BeautifulSoup as bs
from pyowm import OWM
from pprint import pprint



bot = TeleBot('') #–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç–æ–∫–µ–Ω —Ç–µ–ª–µ–≥—Ä–∞–º–∞
owmmm = OWM('beaa6a11f7555a5a2bca6267b8f83a08')
info = {
    'start': f'–ü—Ä–∏–≤–µ—Ç!–Ø –±—É–¥—É –¥–µ–ª–∏—Ç—Å—è —Å –≤–∞–º–∏ –∫—É—Ä—Å–æ–º –≤–∞–ª—é—Ç —Å —Å–∞–π—Ç–∞ Investing. –ê —Ç–∞–∫ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É, –∫–æ—Ç–æ—Ä–∞—è –±–µ—Ä–µ—Ç—Å—è —Å —Å–∞–π—Ç–∞ openweather\n\n'
             f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ /menu, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ –º–µ–Ω—é. '
             f'–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –¥–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞–ª—é—Ç–∞—Ö —Ç–æ –≤–≤–µ–¥–∏—Ç–µ /help_currency',
    'open_markup': '–ú–µ–Ω—é',
    'currency' : '–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –≤–∞–ª—é—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≤–∞–ª—é—Ç–∞-–≤–∞–ª—é—Ç–∞. –í–≤–æ–¥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –≤–∞–ª—é—Ç—ã —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ all',
    'not_in_dict': '–ù–µ –∑–Ω–∞–∫–æ–º–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏  /menu',
    'prossesing' : '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞',
    'error' : '–û—à–∏–±–∫–∞. –í—ã –≤–≤–µ–ª–∏ –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç.–ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –≤–≤–µ—Å—Ç–∏ /currency —Å–Ω–æ–≤–∞!',
    'menu_back' : '–î–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–Ω—é –Ω–∞–ø–∏–∏—à–∏—Ç–µ /menu',
    'weather' : '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É'
 }
#Currency part 
def parse_currency_type(actual_date: str): #–ø–∞—Ä—Å–µ—Ä 
    try:
        if((match(r'^[a-z]{3}[-][a-z]{3}', actual_date)) != None):
            real_date = match(r'^[a-z]{3}[-][a-z]{3}', actual_date).group()
        else: 
            return 'None'
    except TypeError:
        return 'None'
    else:
        new_date = real_date
        return new_date


def get_all_currency(message): # –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—Å–µ—Ö –≤–∞–ª—é—Ç–∞—Ö
    curr = 'https://ru.investing.com/currencies/streaming-forex-rates-majors'
    head = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'}
    full_page = get(curr,headers = head)
    soup = bs(full_page.content, 'html.parser')
    convert = soup.find_all('td', class_="bold left noWrap elp plusIconTd")
    curren = []
    newcurren = []
    for item in convert:
        curren.append(item.find('a').get_text())
    i = 0
    j = 0
    newline =''
    while ( i <len (curren)):
        while(j < 7):
            if(curren[i][j] == '/'):
                newline = newline + '-'
                j= j + 1 
            else:
                newline = newline +curren[i][j]
                j= j + 1
        newcurren.append(newline.lower())
        newline = ''
        i= i + 1
        j = 0

    all_currency = []
    for i in newcurren:
        url = f'https://ru.investing.com/currencies/{i}'
        if(i == 'btc-usd'):
            url = 'https://ru.investing.com/crypto/bitcoin/btc-usd'
        if(i == 'btc-eur'):
            url = 'https://ru.investing.com/crypto/bitcoin/btc-eur'
        if(i == 'eth-usd'):
            url = 'https://ru.investing.com/crypto/ethereum/eth-usd'
        head = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'}
        full_page = get(url,headers = head)
        soup = bs(full_page.content, 'html.parser')
        price = soup.find_all("span", class_="text-2xl")
        name = soup.findAll("h1", {"class":"text-2xl font-semibold instrument-header_title__GTWDv mobile:mb-2"})
        all_currency.append('–ö—É—Ä—Å ' + name[0].text + ' :' + price[0].text)
    newline = ''
    j = 0
    for i in all_currency:
        if(j % 4 == 0 ):
            newline = newline + '\n'
        else:
            newline = newline + i + ';   '
        j = j + 1 
    if len(newline) > 4096:
        for x in range(0, len(newline), 4096):
             bot.send_message(message.chat.id, newline[x:x+4096] )
    else:
        bot.send_message(message.chat.id, newline )
def get_currency(actual_currency: str): # –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –≤–∞–ª—é—Ç–µ
    
    url = f'https://ru.investing.com/currencies/{actual_currency}'
    if(actual_currency =='btc-usd'):
        url = 'https://ru.investing.com/crypto/bitcoin/btc-usd'
    if(actual_currency == 'btc-eur'):
        url = 'https://ru.investing.com/crypto/bitcoin/btc-eur'
    if(actual_currency == 'eth-usd'):
        url = 'https://ru.investing.com/crypto/ethereum/eth-usd'
    head = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'}
    full_page = get(url,headers = head)
    soup = bs(full_page.content, 'html.parser')
    name = soup.findAll("h1", {"class":"text-2xl font-semibold instrument-header_title__GTWDv mobile:mb-2"})
    price = soup.findAll("span", {"class":"text-2xl"})
    return f'–ö—É—Ä—Å {name[0].text} : {price[0].text}'


@bot.message_handler(commands=['start', 'help' ])
def start(message):
    bot.send_message(message.chat.id, info['start'])

@bot.message_handler(commands=['help_currency'])
def help(message):
    curr = 'https://ru.investing.com/currencies/streaming-forex-rates-majors'
    head = {'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36'}
    full_page = get(curr,headers = head)
    soup = bs(full_page.content, 'html.parser')
    convert = soup.findAll("td", {"class":"bold left noWrap elp plusIconTd"}, )
    bot.send_message(message.chat.id, '–í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞–ª—é—Ç—ã')
    result = '|'
    for i in convert:
        for td in i.findAll("a"):
            result =  result +  td.text
            result = result + '|'  
    if len(result) > 4096:
        for x in range(0, len(result), 4096):
             bot.send_message(message.chat.id, result[x:x+4096] )
    else:
        bot.send_message(message.chat.id, result )



@bot.message_handler(commands=['menu'])
def currency(message):
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)

    button_1 = types.KeyboardButton('–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç üí∞')
    button_2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ ‚òÄ')
    markup.add(button_1, button_2)

    bot.send_message(message.chat.id, info['open_markup'], reply_markup=markup)


def answer_to_user(message):
    if(message.text == 'All' or message.text == 'all'):
        get_all_currency(message=message)
    else:

        parsed_date = parse_currency_type(actual_date=message.text)
    
        if(parsed_date != 'None'):
            bot.send_message(message.chat.id, get_currency(parsed_date))
            bot.send_message(message.chat.id, info('menu_back'))
        else:
            bot.send_message(message.chat.id, info('error'))


@bot.message_handler(content_types='text')
def reply(message):

    match message.text:
        case '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç üí∞':
            msg = bot.send_message(message.chat.id, info['currency'])
            bot.register_next_step_handler(msg,answer_to_user)
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ',reply_markup=types.ReplyKeyboardRemove())
        case '–ü–æ–≥–æ–¥–∞ ‚òÄ':
            msg = bot.send_message(message.chat.id, info['weather'])
            bot.register_next_step_handler(msg,get_weather, city = msg, open_weather_token = owmmm )
            bot.send_message(message.chat.id, '–í–≤–æ–¥ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–∏–º. –ü—Ä–∏–º–µ—Ä: Saint Petersburg' , reply_markup=types.ReplyKeyboardRemove())
        case '–ù–∞–∑–∞–¥':  
            bot.send_message(message.chat.id, '–í—ã—Ö–æ–¥', reply_markup=types.ReplyKeyboardRemove())
        case _:
            bot.send_message(message.chat.id, info['not_in_dict'])

### Weather part 
def get_weather(message,city, open_weather_token):
    bot.send_message(message.chat.id, '1')
    city = message.text
    bot.send_message(message.chat.id, '2')
    try:
        r = get(
            f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={'beaa6a11f7555a5a2bca6267b8f83a08'}&units=metric"
        )
        bot.send_message(message.chat.id, '3')
        data = r.json()
        pprint(data)
        city = data["name"]
        temp_max = data["main"]["temp_max"]
        temp = data["main"]["temp"]
        temp_min = data["main"]["temp_min"]
        pressure = data['main']['pressure']
        sun_rise_time = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sun_set_time = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        bot.send_message(message.chat.id, f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ :{city}\n"
                                          f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}\n"
                                          f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_min}–°\n"
                                          f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_max}–°\n"
                                          f"–î–∞–≤–ª–µ–Ω–∏–µ: {pressure}–º–º.—Ä—Ç.—Å—Ç\n"
                                          f"–í—Ä–µ–º—è —Ä–∞—Å—Å–≤–µ—Ç–∞ {sun_rise_time}\n"
                                          f"–í—Ä–µ–º—è –∑–∞–∫–∞—Ç–∞ {sun_set_time}\n")
    except Exception as e:
        print(e)

if __name__ == '__main__': # —á—Ç–æ–±—ã –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤ –≤–∏–¥–µ —Å—Ü–µ–Ω–∞—Ä–∏—è, –∞ –Ω–µ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
    try:
       bot.polling(none_stop=True) # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
    except Exception as e:
       print(e) # –∏–ª–∏ import traceback; traceback.print_exc() –¥–ª—è –ø–µ—á–∞—Ç–∏ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ—ã
       time.sleep(15)
